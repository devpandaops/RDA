{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/cabra/PROJETOS/CIM/RDA/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nvar CacheModule_1;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CacheModule = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst decorators_1 = require(\"../decorators\");\n\nconst cache_constants_1 = require(\"./cache.constants\");\n\nconst cache_providers_1 = require(\"./cache.providers\");\n/**\n * Module that provides Nest cache-manager.\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n *\n * @publicApi\n */\n\n\nlet CacheModule = CacheModule_1 = class CacheModule {\n  /**\n   * Configure the cache manager statically.\n   *\n   * @param options options to configure the cache manager\n   *\n   * @see [Customize caching](https://docs.nestjs.com/techniques/caching#customize-caching)\n   */\n  static register(options = {}) {\n    return {\n      module: CacheModule_1,\n      global: options.isGlobal,\n      providers: [{\n        provide: cache_constants_1.CACHE_MODULE_OPTIONS,\n        useValue: options\n      }]\n    };\n  }\n  /**\n   * Configure the cache manager dynamically.\n   *\n   * @param options method for dynamically supplying cache manager configuration\n   * options\n   *\n   * @see [Async configuration](https://docs.nestjs.com/techniques/caching#async-configuration)\n   */\n\n\n  static registerAsync(options) {\n    return {\n      module: CacheModule_1,\n      global: options.isGlobal,\n      imports: options.imports,\n      providers: [...this.createAsyncProviders(options), ...(options.extraProviders || [])]\n    };\n  }\n\n  static createAsyncProviders(options) {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [this.createAsyncOptionsProvider(options), {\n      provide: options.useClass,\n      useClass: options.useClass\n    }];\n  }\n\n  static createAsyncOptionsProvider(options) {\n    if (options.useFactory) {\n      return {\n        provide: cache_constants_1.CACHE_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: cache_constants_1.CACHE_MODULE_OPTIONS,\n      useFactory: function () {\n        var _ref = _asyncToGenerator(function* (optionsFactory) {\n          return optionsFactory.createCacheOptions();\n        });\n\n        return function useFactory(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      inject: [options.useExisting || options.useClass]\n    };\n  }\n\n};\nCacheModule = CacheModule_1 = tslib_1.__decorate([decorators_1.Module({\n  providers: [cache_providers_1.createCacheManager()],\n  exports: [cache_constants_1.CACHE_MANAGER]\n})], CacheModule);\nexports.CacheModule = CacheModule;","map":{"version":3,"sources":["C:/Users/cabra/PROJETOS/CIM/BACKEND/node_modules/@nestjs/common/cache/cache.module.js"],"names":["CacheModule_1","Object","defineProperty","exports","value","CacheModule","tslib_1","require","decorators_1","cache_constants_1","cache_providers_1","register","options","module","global","isGlobal","providers","provide","CACHE_MODULE_OPTIONS","useValue","registerAsync","imports","createAsyncProviders","extraProviders","useExisting","useFactory","createAsyncOptionsProvider","useClass","inject","optionsFactory","createCacheOptions","__decorate","Module","createCacheManager","CACHE_MANAGER"],"mappings":"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","sourcesContent":["\"use strict\";\nvar CacheModule_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst decorators_1 = require(\"../decorators\");\nconst cache_constants_1 = require(\"./cache.constants\");\nconst cache_providers_1 = require(\"./cache.providers\");\n/**\n * Module that provides Nest cache-manager.\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n *\n * @publicApi\n */\nlet CacheModule = CacheModule_1 = class CacheModule {\n    /**\n     * Configure the cache manager statically.\n     *\n     * @param options options to configure the cache manager\n     *\n     * @see [Customize caching](https://docs.nestjs.com/techniques/caching#customize-caching)\n     */\n    static register(options = {}) {\n        return {\n            module: CacheModule_1,\n            global: options.isGlobal,\n            providers: [{ provide: cache_constants_1.CACHE_MODULE_OPTIONS, useValue: options }],\n        };\n    }\n    /**\n     * Configure the cache manager dynamically.\n     *\n     * @param options method for dynamically supplying cache manager configuration\n     * options\n     *\n     * @see [Async configuration](https://docs.nestjs.com/techniques/caching#async-configuration)\n     */\n    static registerAsync(options) {\n        return {\n            module: CacheModule_1,\n            global: options.isGlobal,\n            imports: options.imports,\n            providers: [\n                ...this.createAsyncProviders(options),\n                ...(options.extraProviders || []),\n            ],\n        };\n    }\n    static createAsyncProviders(options) {\n        if (options.useExisting || options.useFactory) {\n            return [this.createAsyncOptionsProvider(options)];\n        }\n        return [\n            this.createAsyncOptionsProvider(options),\n            {\n                provide: options.useClass,\n                useClass: options.useClass,\n            },\n        ];\n    }\n    static createAsyncOptionsProvider(options) {\n        if (options.useFactory) {\n            return {\n                provide: cache_constants_1.CACHE_MODULE_OPTIONS,\n                useFactory: options.useFactory,\n                inject: options.inject || [],\n            };\n        }\n        return {\n            provide: cache_constants_1.CACHE_MODULE_OPTIONS,\n            useFactory: async (optionsFactory) => optionsFactory.createCacheOptions(),\n            inject: [options.useExisting || options.useClass],\n        };\n    }\n};\nCacheModule = CacheModule_1 = tslib_1.__decorate([\n    decorators_1.Module({\n        providers: [cache_providers_1.createCacheManager()],\n        exports: [cache_constants_1.CACHE_MANAGER],\n    })\n], CacheModule);\nexports.CacheModule = CacheModule;\n"]},"metadata":{},"sourceType":"script"}