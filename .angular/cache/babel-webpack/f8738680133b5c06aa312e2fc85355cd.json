{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/cabra/PROJETOS/CIM/RDA/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParseUUIDPipe = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\n\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\n\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\n\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\n\nconst is_uuid_1 = require(\"../utils/is-uuid\");\n\nlet ParseUUIDPipe = class ParseUUIDPipe {\n  constructor(options) {\n    options = options || {};\n    const {\n      exceptionFactory,\n      errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST,\n      version\n    } = options;\n    this.version = version;\n\n    this.exceptionFactory = exceptionFactory || (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n  }\n\n  transform(value, metadata) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!is_uuid_1.isUUID(value, _this.version)) {\n        throw _this.exceptionFactory(`Validation failed (uuid ${_this.version ? 'v' + _this.version : ''} is expected)`);\n      }\n\n      return value;\n    })();\n  }\n\n};\nParseUUIDPipe = tslib_1.__decorate([injectable_decorator_1.Injectable(), tslib_1.__param(0, optional_decorator_1.Optional()), tslib_1.__metadata(\"design:paramtypes\", [Object])], ParseUUIDPipe);\nexports.ParseUUIDPipe = ParseUUIDPipe;","map":{"version":3,"sources":["C:/Users/cabra/PROJETOS/CIM/BACKEND/node_modules/@nestjs/common/pipes/parse-uuid.pipe.js"],"names":["Object","defineProperty","exports","value","ParseUUIDPipe","tslib_1","require","injectable_decorator_1","optional_decorator_1","http_status_enum_1","http_error_by_code_util_1","is_uuid_1","constructor","options","exceptionFactory","errorHttpStatusCode","HttpStatus","BAD_REQUEST","version","error","HttpErrorByCode","transform","metadata","isUUID","__decorate","Injectable","__param","Optional","__metadata"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,yCAAD,CAAtC;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,uCAAD,CAApC;;AACA,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,2BAAD,CAAlC;;AACA,MAAMI,yBAAyB,GAAGJ,OAAO,CAAC,kCAAD,CAAzC;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAIF,aAAa,GAAG,MAAMA,aAAN,CAAoB;AACpCQ,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjBA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,UAAM;AAAEC,MAAAA,gBAAF;AAAoBC,MAAAA,mBAAmB,GAAGN,kBAAkB,CAACO,UAAnB,CAA8BC,WAAxE;AAAqFC,MAAAA;AAArF,QAAkGL,OAAxG;AACA,SAAKK,OAAL,GAAeA,OAAf;;AACA,SAAKJ,gBAAL,GACIA,gBAAgB,KACXK,KAAK,IAAI,IAAIT,yBAAyB,CAACU,eAA1B,CAA0CL,mBAA1C,CAAJ,CAAmEI,KAAnE,CADE,CADpB;AAGH;;AACKE,EAAAA,SAAS,CAAClB,KAAD,EAAQmB,QAAR,EAAkB;AAAA;;AAAA;AAC7B,UAAI,CAACX,SAAS,CAACY,MAAV,CAAiBpB,KAAjB,EAAwB,KAAI,CAACe,OAA7B,CAAL,EAA4C;AACxC,cAAM,KAAI,CAACJ,gBAAL,CAAuB,2BAA0B,KAAI,CAACI,OAAL,GAAe,MAAM,KAAI,CAACA,OAA1B,GAAoC,EAAG,eAAxF,CAAN;AACH;;AACD,aAAOf,KAAP;AAJ6B;AAKhC;;AAdmC,CAAxC;AAgBAC,aAAa,GAAGC,OAAO,CAACmB,UAAR,CAAmB,CAC/BjB,sBAAsB,CAACkB,UAAvB,EAD+B,EAE/BpB,OAAO,CAACqB,OAAR,CAAgB,CAAhB,EAAmBlB,oBAAoB,CAACmB,QAArB,EAAnB,CAF+B,EAG/BtB,OAAO,CAACuB,UAAR,CAAmB,mBAAnB,EAAwC,CAAC5B,MAAD,CAAxC,CAH+B,CAAnB,EAIbI,aAJa,CAAhB;AAKAF,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseUUIDPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\nconst is_uuid_1 = require(\"../utils/is-uuid\");\nlet ParseUUIDPipe = class ParseUUIDPipe {\n    constructor(options) {\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST, version, } = options;\n        this.version = version;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    async transform(value, metadata) {\n        if (!is_uuid_1.isUUID(value, this.version)) {\n            throw this.exceptionFactory(`Validation failed (uuid ${this.version ? 'v' + this.version : ''} is expected)`);\n        }\n        return value;\n    }\n};\nParseUUIDPipe = tslib_1.__decorate([\n    injectable_decorator_1.Injectable(),\n    tslib_1.__param(0, optional_decorator_1.Optional()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseUUIDPipe);\nexports.ParseUUIDPipe = ParseUUIDPipe;\n"]},"metadata":{},"sourceType":"script"}